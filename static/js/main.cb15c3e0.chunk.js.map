{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","Checkbox","checked","complete","onChange","id","name","TodoList","todos","map","key","Alert","props","elevation","variant","useStyles","makeStyles","theme","root","width","marginTop","spacing","App","useState","setTodos","todoNameRef","useRef","classes","React","open","setOpen","handleClose","event","reason","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","AppBar","position","Toolbar","Typography","className","title","filter","length","Card","newTodos","find","TextField","inputRef","label","Button","onClick","e","current","value","prevTodos","uuidv4","handleAddTodo","color","mx","Snackbar","autoHideDuration","onClose","severity","ReactDOM","render","document","getElementById"],"mappings":"4OAGe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAInC,OACE,oCACE,+BACE,kBAACC,EAAA,EAAD,CAAUC,QAASH,EAAKI,SAAUC,SANxC,WACEJ,EAAWD,EAAKM,OAMXN,EAAKO,MAER,8BCVS,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACxC,OAAOQ,EAAMC,KAAI,SAAAV,GACf,OAAO,kBAACD,EAAD,CAAMY,IAAKX,EAAKM,GAAIL,WAAYA,EAAYD,KAAMA,O,oGCS7D,SAASY,EAAMC,GACb,OAAO,kBAAC,IAAD,eAAUC,UAAW,EAAGC,QAAQ,UAAaF,IAGtD,IAAMG,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMI,QAAQ,SA6GhBC,MAtGf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNf,EADM,KACCgB,EADD,KAEPC,EAAcC,mBACdC,EAAUZ,IAHH,EAIWa,IAAML,UAAS,GAJ1B,mBAINM,EAJM,KAIAC,EAJA,KAUPC,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJH,GAAQ,IAiCV,OA9BAI,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QArBtB,kBAsBlBJ,GAAaX,EAASW,KACzB,IAEHD,qBAAU,WACRI,aAAaE,QA1BS,gBA0BkBJ,KAAKK,UAAUjC,MACtD,CAACA,IAwBF,oCACE,kBAACkC,EAAA,EAAD,CAAQC,SAAS,YACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAY/B,QAAQ,KAAKgC,UAAWnB,EAAQoB,OACO,IAAhDvC,EAAMwC,QAAO,SAAAjD,GAAI,OAAKA,EAAKI,YAAU8C,OAClC,kBACAzC,EAAMwC,QAAO,SAAAjD,GAAI,OAAKA,EAAKI,YAAU8C,QACY,IAAhDzC,EAAMwC,QAAO,SAAAjD,GAAI,OAAKA,EAAKI,YAAU8C,OAClC,QACA,UACJ,eAAgB,OAI1B,kBAACC,EAAA,EAAD,KACE,kBAAC3C,EAAD,CAAUC,MAAOA,EAAOR,WArC9B,SAAoBK,GAClB,IAAM8C,EAAQ,YAAO3C,GACfT,EAAOoD,EAASC,MAAK,SAAArD,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBqB,EAAS2B,OAmCP,kBAACE,EAAA,EAAD,CACEC,SAAU7B,EACVpB,GAAG,iBACHkD,MAAM,WACNzC,QAAQ,aAEV,6BACA,kBAAC0C,EAAA,EAAD,CACEC,QAAS,WAnEb3B,GAAQ,GA2BV,SAAuB4B,GACrB,IAAMpD,EAAOmB,EAAYkC,QAAQC,MACpB,KAATtD,IACJkB,GAAS,SAAAqC,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAExD,GAAIyD,cAAUxD,KAAMA,EAAMH,UAAU,QAE9DsB,EAAYkC,QAAQC,MAAQ,MAoCtBG,IAEFjD,QAAQ,YACRkD,MAAM,UACNC,GAAG,QAPL,YAWA,kBAACC,EAAA,EAAD,CAAUrC,KAAMA,EAAMsC,iBAAkB,IAAMC,QAASrC,GACrD,kBAAC,EAAD,CAAOqC,QAASrC,EAAasC,SAAS,QAAtC,6BAIF,6BACA,kBAACb,EAAA,EAAD,CACEC,QAhDN,WACE,IAAMN,EAAW3C,EAAMwC,QAAO,SAAAjD,GAAI,OAAKA,EAAKI,YAC5CqB,EAAS2B,IA+CLrC,QAAQ,YACRkD,MAAM,UACNC,GAAG,QAJL,qBCnHNK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cb15c3e0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nexport default function Todo({ todo, toggleTodo }) {\r\n  function handleTodoClick() {\r\n    toggleTodo(todo.id);\r\n  }\r\n  return (\r\n    <>\r\n      <label>\r\n        <Checkbox checked={todo.complete} onChange={handleTodoClick} />\r\n        {todo.name}\r\n      </label>\r\n      <br />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n  return todos.map(todo => {\r\n    return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />;\r\n  });\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport \"./App.css\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst LOCAL_STORAGE_KEY = \"todoApp.todos\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  function toggleTodo(id) {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n    setTodos(prevTodos => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false }];\n    });\n    todoNameRef.current.value = null;\n  }\n\n  function handleClearTodo() {\n    const newTodos = todos.filter(todo => !todo.complete);\n    setTodos(newTodos);\n  }\n\n  return (\n    <>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            {todos.filter(todo => !todo.complete).length === 0\n              ? \"All done! Phew!\"\n              : todos.filter(todo => !todo.complete).length +\n                (todos.filter(todo => !todo.complete).length === 1\n                  ? \" task\"\n                  : \" tasks\") +\n                \" left to do.\"}{\" \"}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Card>\n        <TodoList todos={todos} toggleTodo={toggleTodo} />\n      </Card>\n      <TextField\n        inputRef={todoNameRef}\n        id=\"outlined-basic\"\n        label=\"New todo\"\n        variant=\"outlined\"\n      />\n      <br />\n      <Button\n        onClick={() => {\n          handleClick();\n          handleAddTodo();\n        }}\n        variant=\"contained\"\n        color=\"primary\"\n        mx=\"auto\"\n      >\n        Add Todo\n      </Button>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Successfully Added Task!\n        </Alert>\n      </Snackbar>\n      <br />\n      <Button\n        onClick={handleClearTodo}\n        variant=\"contained\"\n        color=\"primary\"\n        mx=\"auto\"\n      >\n        Clear completed\n      </Button>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}